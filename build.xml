<?xml version="1.0" encoding="UTF-8"?>
<project default="build" name="SimCad"
	xmlns:artifact="antlib:org.apache.maven.artifact.ant">

	<property name="project.name" value="SimCad" />
	<property name="project.version" value="2.1" />

	<property name="src.dir" value="src/main/java" />
	<property name="resource.dir" value="src/main/resources" />
	<property name="scripts.dir" value="src/main/scripts" />
	<property name="lib.dir" value="lib" />
	<property name="target.dir" value="target" />
	<property name="class.dir" value="${target.dir}/classes" />
	<property name="jar.dir" value="${target.dir}/jar" />
	<property name="dist.dir" value="${target.dir}/dist" />
	
	<property name="simcad.scripts.dir" value="${scripts.dir}/SimCad/" />
	<property name="project.jar" location="${jar.dir}/simLib.jar" />
	<property name="main-class" value="ca.usask.cs.srlab.simcad.SimCad" />

	<property name="distribution.name" value="${project.name}-${project.version}" />
	<property name="distribution.zip" value="${dist.dir}/${distribution.name}.zip" />
	<property name="distribution.tar" value="${dist.dir}/${distribution.name}.tar" />

	<target name="clean" depends="" description="Clean up temporary files">
		<echo message="Cleaning up old binaries and builds..." />
		<delete dir="${target.dir}" includeemptydirs="true"/>
	</target>
	
	<target name="mvn-init" unless="compile.classpath" xmlns:artifact="urn:maven-artifact-ant">
		<typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant"
                 classpath="lib/maven-ant-tasks-2.1.3.jar"/>

		<condition property="maven.repo.local" value="${maven.repo.local}" else="${user.home}/.m2/repository">
			<isset property="maven.repo.local"/>
		</condition>

		<echo>maven.repo.local=${maven.repo.local}</echo>

		<artifact:localRepository id="local.repository" path="${maven.repo.local}"/>

		<artifact:pom file="pom.xml" id="maven.project"/>

		<artifact:dependencies pathId="compile.classpath" filesetId="compile.fileset" useScope="compile">
			<pom refid="maven.project"/>
			<localRepository refid="local.repository"/>
		</artifact:dependencies>

		<artifact:dependencies pathId="test.classpath" filesetId="test.fileset" useScope="test">
			<pom refid="maven.project"/>
			<localRepository refid="local.repository"/>
		</artifact:dependencies>

		<artifact:dependencies pathId="runtime.classpath" filesetId="runtime.fileset" useScope="runtime">
			<pom refid="maven.project"/>
			<localRepository refid="local.repository"/>
		</artifact:dependencies>
	</target>
	
	<target name="compile" depends="mvn-init" description="Compile java source files">
		<echo message="Compiling source..." />
		
		<mkdir dir="${class.dir}" />
		
		<javac srcdir="${src.dir}" destdir="${class.dir}" classpathref="compile.classpath" source="1.6" target="1.6"  includeantruntime="true" />

		<copy todir="${class.dir}" failonerror="true">
			<fileset dir="src/main/java" excludes="**/*.java" />
		</copy>
		
		<copy todir="${class.dir}" failonerror="true">
			<fileset dir="src/main/resources" />
		</copy>
	</target>
	
	<target name="jar" depends="compile" description="building jar file">
		<echo message="Building Jar..."/>
		<mkdir dir="${jar.dir}"/>
		<jar destfile="${project.jar}" basedir="${class.dir}">
			<manifest>
				<attribute name="Main-Class" value="${main-class}"/>
				<attribute name="Class-Path" value=". ../simcad.cfg.xml"/>
			</manifest>
		</jar>
	</target>

	<target name="build" depends="jar">
		<echo message="Building distribution..." />

		<mkdir dir="${dist.dir}" />

		<!--copy all scripts in distribution-->
		<!--copy todir="${dist.dir}">
			<fileset dir="${simcad.scripts.dir}"/>
		</copy-->

		<mkdir dir="${dist.dir}/${distribution.name}"/>

		<!--copy all scripts in distribution-->
		<exec executable="cp" dir="." output="/dev/null" failonerror="true">
			<arg value="-r"/>
			<arg value="${simcad.scripts.dir}"/>
			<arg value="${dist.dir}/${distribution.name}"/>
		</exec>

		<!--copy all dependent jars -->
		<copy todir="${dist.dir}/${distribution.name}/tools/">
			<fileset refid="compile.fileset" />
			<mapper type="flatten" />
		</copy>
		
		<!-- copy simLib jar-->
		<copy todir="${dist.dir}/${distribution.name}/tools/">
			<fileset dir="${jar.dir}">
				<include name="**/*.jar" />
			</fileset>
		</copy>

		<!--build the distribution zip file-->

		<!--zip destfile="${distribution.zip}" >
			<fileset dir="${build.dir}" 
			excludes="**/jar/"/>
		</zip-->

		<exec executable="zip" dir="${dist.dir}" failonerror="true">
			<arg value="-r"/>
			<arg value="-q"/>
			<arg value="${basedir}/${distribution.zip}"/>
			<arg value="${distribution.name}"/>
		</exec>

		<!--tar destfile="${distribution.tar}" longfile="gnu" compression="gzip">
			<tarfileset dir="${build.dir}">
				<include name="**" />
				<exclude name="jar/**" />
			</tarfileset>
		</tar-->

	</target>


</project>