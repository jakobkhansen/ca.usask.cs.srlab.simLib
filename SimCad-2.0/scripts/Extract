#!/bin/bash 
# Generi extractor script
#
# Usage:  Extract granularity language system-directory [output_dir] 
#           where granularity is one of:  { functions blocks }
#           and   language    is one of:  { c java cs py }

# Revised 17 Nov 2010

ulimit -s hard

# Find our installation
lib="${0%%/scripts/Extract}"
if [ ! -d ${lib} ]
then
    echo "*** Error:  cannot find simCad installation ${lib}"
    echo ""
    exit 99
fi

# check granularity
if [ "$1" = "functions" ] || [ "$1" = "blocks" ]
then
    granularity=$1
    shift
else
    echo "Usage:  Extract granularity language system-directory [output_dir]"
    echo "          where granularity is one of:  { functions blocks }"
    echo "          and   language    is one of:  { c java cs py }"
    exit 99
fi

# check language
if [ "$1" = "c" ] || [ "$1" = "java" ] || [ "$1" = "cs" ] || [ "$1" = "py" ] || [ "$1" = "wsdl" ]
then
    language=$1
    shift
else
    echo "Usage:  Extract granularity language system-directory [output_dir]"
    echo "          where granularity is one of:  { functions blocks }"
    echo "          and   language    is one of:  { c java cs py }"
    exit 99
fi

# check at least one system directory
if [ ! -d "$1" ]
then
    echo "Usage:  Extract granularity language system-directory [output_dir]"
    echo "          where granularity is one of:  { functions blocks }"
    echo "          and   language    is one of:  { c java cs py }"
    exit 99
fi

# check we have the extractor we need
if [ ! -s ${lib}/txl/${language}-extract-${granularity}.txl ]
then
    echo "*** ERROR: Language ${language} not supported at granularity ${granularity}"
    exit 99
fi

# Check we have a system
system=$1
if [ ! -d "${system}" ]
then
    echo "*** ERROR: Can't find system source directory ${system}"
    exit 99
else
    shift
fi


#check output_dir
if [ "$1" = "." ] || [ "$1" = "" ]
then 
    output_dir=${system}/.simcad
    if [ ! -d "${output_dir}" ]
    then
        mkdir -p 777 ${output_dir}        
    fi
    shift
else
    if [ -d "$1" ]
    then
        output_dir=$1
    else
        mkdir -p 777 $1
    fi
    output_dir=$1
    shift
fi

if [ "$1" = "." ] || [ "$1" = "./" ] || [ "$1" = "" ]
then 
    output_dir=${system}_simcad_clones
fi

if [ ! -d "${output_dir}" ]
then
#echo ""
	mkdir -p -m 777 ${output_dir}
	#chmod +rw ${output_dir} 
fi


result=$?
echo ""

if [ $result -gt 1 ]
then
    echo "*** ERROR: Can't create output directory ${output_dir}"
    exit 99
fi

# Clean up any previous results
/bin/rm -rf ${output_dir}/${granularity}
echo -n > ${output_dir}/${granularity}.xml

# Extract potential clones
date

# Find all language source files in the directory and its subdirectories
if [ -x ${lib}/txl/${language}-extract-${granularity}.x ]
then
    echo "${lib}/txl/${language}-extract-${granularity}.x -s 400 ALL.${language} >> ${output_dir}/${granularity}.xml"
else
    echo "txl -q -s 400 ALL.${language} ${lib}/txl/${language}-extract-${granularity}.txl >> ${output_dir}/${granularity}.xml"
fi

result=0

for i in `find ${system} | grep "\.${language}"'$'` 
do
    source=$i
    if [ ${language} = "c" ] || [ ${language} = "cs" ]
    then
        if [ -x ${lib}/txl/ifdef.x ]
        then
            # echo "${lib}/txl/ifdef.x $i > $i.ifdefed"
            ${lib}/txl/ifdef.x $i > $i.ifdefed
        else
            # echo "txl -q -s 400 $i ${lib}/txl/ifdef.txl > $i.ifdefed"
            txl -q -s 400 $i ${lib}/txl/ifdef.txl > $i.ifdefed
        fi
        source=$i.ifdefed
    fi
    if [ ${language} = "py" ] 
    then
        if [ -x ${lib}/txl/pyindent.x ]
        then
            # echo "${lib}/txl/pyindent.x $i > $i.pyindent"
            ${lib}/txl/pyindent.x $i > $i.pyindent
        else
            # echo "txl -q -s 400 $i ${lib}/txl/pyindent.txl > $i.pyindent"
            txl -q -s 400 $i ${lib}/txl/pyindent.txl > $i.pyindent
        fi
        source=$i.pyindent
    fi
    if [ -x ${lib}/txl/${language}-extract-${granularity}.x ]
    then
        # echo "${lib}/txl/${language}-extract-${granularity}.x -s 400 ${source} >> ${output_dir}/${granularity}.xml"
        ${lib}/txl/${language}-extract-${granularity}.x -s 400 ${source} >> ${output_dir}/${granularity}.xml
    else
        # echo "txl -q -s 400 ${source} ${lib}/txl/${language}-extract-${granularity}.txl >> ${output_dir}/${granularity}.xml"
        txl -q -s 400 ${source} ${lib}/txl/${language}-extract-${granularity}.txl >> ${output_dir}/${granularity}.xml
    fi

    if [ $? != 0 ]
    then
	result=$?
    fi
done

echo ""
date
echo ""

exit $result
