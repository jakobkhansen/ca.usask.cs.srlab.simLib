<source file="/Volumes/Data/auni_home/test_systems/dnsjava/dnsjava-0-3/dig.java" startline="13" endline="17">
static void usage () {
    System.out.println ("Usage: dig [@server] name [<type>] [<class>]");
    System.exit (0);
}
</source>
<source file="/Volumes/Data/auni_home/test_systems/dnsjava/dnsjava-0-3/dig.java" startline="19" endline="30" key="MultiKey[7, 37]">
static void doQuery (x x, x x) throws IOException {
    x x;
    System.out.println ("; java dig 0.0");
    x = x.send (x);
    if (x == null) return;

    System.out.println (x);
}
</source>
<source file="/Volumes/Data/auni_home/test_systems/dnsjava/dnsjava-0-3/dnsServer.java" startline="145" endline="150" pcid="348" key="MultiKey[6, 22]">
public void
addUDP(final x x) {
	x x;
	x = new Thread(new Runnable() {public void run() {serveTCP(x);}});
	x.start();
}
</source>
<source file="/Volumes/Data/auni_home/test_systems/dnsjava/dnsjava-0-3/jnamed.java" startline="145" endline="150" pcid="359" key="MultiKey[6, 22]">
public void
addUDP(final x x) {
	x x;
	x = new Thread(new Runnable() {public void run() {serveTCP(x);}});
	x.start();
}
</source>
<source file="/Volumes/Data/auni_home/test_systems/dnsjava/dnsjava-0-3/update.java" startline="257" endline="276" key="MultiKey[19, 27]">
void
doProhibit(x x) throws IOException {
	x x;

	x x = x.nextToken();
	if (x.equals("-r")) 
		x = parseRR(x, x, 0);
	else if (x.equals("-s"))
		x = parseSet(x, DClass.NONE);
	else if (x.equals("-n"))
		x = parseName(x, DClass.NONE);
	else {
		System.out.println("qualifier " + x + " not supported");
		return;
	}
	if (x != null) {
		x.addRecord(x, x);
		System.out.println(x);
	}
}
</source>
<source file="/Volumes/Data/auni_home/test_systems/dnsjava/dnsjava-0-3/update.java" startline="236" endline="255" key="MultiKey[19, 26]">
void
doRequire(x x) throws IOException {
	x x;

	x x = x.nextToken();
	if (x.equals("-r")) 
		x = parseRR(x, x, 0);
	else if (x.equals("-s"))
		x = parseList(x, DClass.ANY);
	else if (x.equals("-n"))
		x = parseName(x, DClass.ANY);
	else {
		System.out.println("qualifier " + x + " not supported");
		return;
	}
	if (x != null) {
		x.addRecord(x, x);
		System.out.println(x);
	}
}
</source>
<source file="/Volumes/Data/auni_home/test_systems/dnsjava/dnsjava-0-3/update.java" startline="216" endline="235" key="MultiKey[17, 31]">
void
doRequire(x x) throws IOException {
	x x;

	x x = x.nextToken();
	if (x.equals("-r")) 
		x = parseRR(x, x, 0);
	else if (x.equals("-s"))
		x = parseSet(x, DClass.ANY);
	else {
		System.out.println("qualifier " + x + " not supported");
		return;
	}
	if (x != null) {
		x.addRecord(x, x);
		System.out.println(x);
	}
}
</source>
<source file="/Volumes/Data/auni_home/test_systems/dnsjava/dnsjava-0-3/util.java" startline="45" endline="50" key="MultiKey[6, 22]">
public void
addUDP(final x x) {
	x x;
	x = new Thread(new Runnable() {public void run() {serveTCP(x);}});
	x.start();
}
</source>